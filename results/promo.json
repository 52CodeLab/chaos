{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Assignment issues",
  "type": "Assignment to static field from instance context",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Assignment to static field <code>serverPort</code> from instance context",
  "detailsInfo": "Reports assignment to, or modification of `static` fields from within an instance method.\n\nAlthough legal, such assignments are tricky to do\nsafely and are often a result of marking fields `static` inadvertently.\n\n**Example:**\n\n\n      class Counter {\n        private static int count = 0;\n\n        void increment() {\n          // Warning: updating a static field\n          // from an instance method\n          count++;\n        }\n      }\n",
  "sources": [
    {
      "type": "method",
      "path": "gear4j-web/src/main/java/club/gclmit/gear4j/web/config/SpringServiceHandler.java",
      "language": "JAVA",
      "line": 239,
      "offset": 8,
      "length": 10,
      "code": {
        "startLine": 237,
        "length": 10,
        "offset": 92,
        "surroundingCode": "    @Override\n    public void onApplicationEvent(WebServerInitializedEvent event) {\n        serverPort = event.getWebServer().getPort();\n        Logger.info(\"Get WebServer port {} WebServer Doc http://localhost:{}/doc.html\", serverPort, serverPort);\n\t}"
      }
    }
  ],
  "attributes": {
    "module": "gear4j.gear4j-web.main",
    "inspectionName": "AssignmentToStaticFieldFromInstanceMethod"
  },
  "hash": "2031485970780771131"
},{
  "tool": "Code Inspection",
  "category": "Class",
  "type": "Class name same as ancestor name",
  "tags": [
    "JAVA"
  ],
  "severity": "High",
  "comment": "Class name <code>MimeTypeUtils</code> is the same as one of its superclass' names",
  "detailsInfo": "Reports classes that have the same name as one of their superclasses, while their fully qualified names remain different. Such class names may be very confusing.\n\n**Example:**\n\n\n      package util;\n      abstract class Iterable<T> implements java.lang.Iterable<T> {}\n\nA quick-fix that renames such classes is available only in the editor.",
  "sources": [
    {
      "type": "class",
      "path": "gear4j-core/src/main/java/club/gclmit/gear4j/core/utils/MimeTypeUtils.java",
      "language": "JAVA",
      "line": 10,
      "offset": 13,
      "length": 13,
      "code": {
        "startLine": 8,
        "length": 13,
        "offset": 33,
        "surroundingCode": " * @since jdk11\n */\npublic class MimeTypeUtils extends org.springframework.util.MimeTypeUtils {\n}"
      }
    }
  ],
  "attributes": {
    "module": "gear4j.gear4j-core.main",
    "inspectionName": "ClassNameSameAsAncestorName"
  },
  "hash": "-220982881445107421"
},{
  "tool": "Code Inspection",
  "category": "Nullability problems",
  "type": "@NotNull/@Nullable problems",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "The generated code will use 'org.jetbrains.annotations.Nullable' instead of 'org.springframework.lang.Nullable'.",
  "detailsInfo": "Reports problems related to nullability annotations.\n\n**Examples:**\n\n* Overriding methods are not annotated:\n\n\n      abstract class A {\n        @NotNull abstract String m();\n      }\n      class B extends A {\n          String m() { return \"empty string\"; }\n      }\n          \n* Annotated primitive types: `@NotNull int myFoo;`\n* Both `@Nullable` and `@NotNull` are present on the same member: `@Nullable @NotNull String myFooString;`\n* Collection of nullable elements is assigned into a collection of non-null elements:\n\n\n      void testList(List<@Nullable String> nullableList) {\n         List<@NotNull String> list2 = nullableList;\n      }\n          \nUse the **Configure Annotations** button to specify nullability annotations and the checkboxes to fine-tune where the inspection should provide warnings.\n\nThis inspection only reports if the language level of the project or module is 5 or higher,\nand nullability annotations are available on the classpath.",
  "sources": [
    {
      "type": "field",
      "path": "gear4j-core/src/main/java/club/gclmit/gear4j/core/http/servlet/HttpCacheResponseWrapper.java",
      "language": "JAVA",
      "line": 230,
      "offset": 2,
      "length": 8,
      "code": {
        "startLine": 228,
        "length": 8,
        "offset": 46,
        "surroundingCode": "\tprivate ServletOutputStream outputStream;\n\n\t@Nullable\n\tprivate PrintWriter writer;\n\n\tprivate ResponseServletOutputStream stream;"
      }
    }
  ],
  "attributes": {
    "module": "gear4j.gear4j-core.main",
    "inspectionName": "NullableProblems"
  },
  "hash": "-7258830995235682108"
},{
  "tool": "Code Inspection",
  "category": "Nullability problems",
  "type": "@NotNull/@Nullable problems",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "The generated code will use 'org.jetbrains.annotations.Nullable' instead of 'org.springframework.lang.Nullable'.",
  "detailsInfo": "Reports problems related to nullability annotations.\n\n**Examples:**\n\n* Overriding methods are not annotated:\n\n\n      abstract class A {\n        @NotNull abstract String m();\n      }\n      class B extends A {\n          String m() { return \"empty string\"; }\n      }\n          \n* Annotated primitive types: `@NotNull int myFoo;`\n* Both `@Nullable` and `@NotNull` are present on the same member: `@Nullable @NotNull String myFooString;`\n* Collection of nullable elements is assigned into a collection of non-null elements:\n\n\n      void testList(List<@Nullable String> nullableList) {\n         List<@NotNull String> list2 = nullableList;\n      }\n          \nUse the **Configure Annotations** button to specify nullability annotations and the checkboxes to fine-tune where the inspection should provide warnings.\n\nThis inspection only reports if the language level of the project or module is 5 or higher,\nand nullability annotations are available on the classpath.",
  "sources": [
    {
      "type": "field",
      "path": "gear4j-core/src/main/java/club/gclmit/gear4j/core/http/servlet/HttpCacheResponseWrapper.java",
      "language": "JAVA",
      "line": 227,
      "offset": 2,
      "length": 8,
      "code": {
        "startLine": 225,
        "length": 8,
        "offset": 78,
        "surroundingCode": "public class HttpCacheResponseWrapper extends HttpServletResponseWrapper {\n\n\t@Nullable\n\tprivate ServletOutputStream outputStream;\n\n\t@Nullable"
      }
    }
  ],
  "attributes": {
    "module": "gear4j.gear4j-core.main",
    "inspectionName": "NullableProblems"
  },
  "hash": "-2801017922533218621"
}]}