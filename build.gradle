plugins {
    id "org.sonarqube" version "3.3"
    id 'idea'
    id 'java'
    id 'java-library'
}

apply from: "${rootProject.projectDir}/gradle/sonar.gradle"

// 所有模块/项目的通用配置
allprojects {
    group = GROUP_ID
    version = VERSION

    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    // 指定JDK版本
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    // 指定编码格式
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }

    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
        options.addStringOption('charSet', 'UTF-8')
    }

    // Java编译任务依赖处理资源的任务
    compileJava.dependsOn(processResources)

    //maven仓库
    repositories {
        mavenLocal()
        maven { url "https://maven.aliyun.com/repository/public" }
        maven { url "https://maven.aliyun.com/repository/spring" }
        maven { url "https://maven.aliyun.com/repository/spring-plugin" }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url "https://repo.spring.io/release" }
        maven { url "https://repo.spring.io/milestone" }
        mavenCentral()
    }
}


configure(subprojects - project(":gear4j-bom")) {
    apply plugin: "idea"
    apply plugin: "java"
    apply plugin: "java-library"
    apply from: "${rootProject.projectDir}/gradle/publish.gradle"

    // 子项目依赖，类似于在父maven的dependencies
    dependencies {
        // import BOM.
        api platform(project(':gear4j-bom'))

        compileOnly "org.slf4j:slf4j-api"
        compileOnly "jakarta.servlet:jakarta.servlet-api"
        compileOnly "com.google.code.findbugs:jsr305"

        testCompileOnly "com.google.code.findbugs:jsr305"
        testImplementation "org.slf4j:slf4j-api"
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    }

    configurations.all {
        //移除org.json:json
        exclude module: 'json'
        exclude module: 'hutool-http'
        //升级spring-beans 版本
//        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
//            if (details.requested.group == 'org.springframework:spring-beans') {
//                details.useVersion '5.3.21'
//            }
//        }
    }

    test {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
        }
    }
}
